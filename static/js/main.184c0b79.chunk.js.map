{"version":3,"sources":["redux/chat-reducer.ts","redux/dialog-reducer.ts","components/Login/Login.module.scss","components/Navbar/Navbar.module.scss","api/api.ts","components/Header/Header.module.scss","api/chat-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Navbar/Navigation/Navigation.tsx","components/Navbar/Navbar.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/News/News.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","components/Navbar/Navigation/Navigation.module.scss","components/common/FormsControls/FormsControls.module.scss","redux/profile-reducer.ts","assets/images/loading.svg","components/common/preloader/Preloader.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/common/preloader/Preloader.module.scss","assets/images/user.png","redux/users-reducer.ts"],"names":["MESSAGES_RECEIVED","STATUS_CHANGED","initialState","messages","status","STATUS_CHAT","Ready","chatReducer","state","action","type","payload","map","m","id","v1","actions","_newMessageHandler","newMessageHandlerCreator","dispatch","_statusChangedHandler","statusChangedCreator","startMessagesListening","a","chatApi","start","subscribe","EventNameConstant","Messages_Received","Status_Changed","stopMessagesListening","unsubscribe","stop","sendMessage","message","dialogs","name","avatar","dialogReducer","addMessageAC","newMessage","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","term","friend","get","response","data","unfollowUsers","delete","followUsers","post","authAPI","me","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","put","savePhoto","photo","formData","FormData","append","saveProfile","subscribers","ws","closeHandler","notifySubscribesAboutStatus","Pending","setTimeout","createChanel","cleanUp","removeEventListener","messageHandler","openHandler","errorHandler","e","newMessages","JSON","parse","forEach","s","Error","console","error","close","WebSocket","addEventListener","eventName","callback","push","filter","send","SET_USER_DATA","isAuth","setAuthUserDataAC","getAuthUserData","resultCode","warn","INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","dialogPage","profilePage","profileReducer","usersPage","usersReducer","auth","form","formReducer","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navigation","React","memo","className","style","nav","to","activeClassName","activeLink","Navbar","aside","Settings","settings","Music","music","News","news","Header","photoUser","header","header__logo","src","logo","alt","placeholder","input","login__name","btn","btn_log","onClick","small","large","user","buttons","href","btn_reg","HeaderContainer","nextProps","nextState","this","props","getMyPhoto","Component","connector","connect","photos","maxLength30","maxLengthCreator","LoginForm","onSubmit","handleSubmit","input_group","input_group__prepend","input_group__text","Field","form_control","component","Input","validate","requiredField","checkbox","LoginReduxForm","reduxForm","Login","container","form_box","header_form","text_primary","text_center","social","length","stopSubmit","_error","WithSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","Users","App","initializeApp","path","render","exact","withRouter","ReactDOM","document","getElementById","ADD_NEW_POST","SET_USER_PROFILE","SET_STATUS","SET_PHOTO","SAVE_PHOTOS_SUCCESS","posts","countLike","profile","newPost","addPostAC","setUserProfileAC","setStatusAC","getUserProfile","userId","dataUser","isFetching","preloader","overlay","FormControl","meta","touched","restProps","errorStyle","fieldForm","formControl","children","error__span","Textarea","value","maxLength","FOLLOW","UNFOLLOW","SET_USERS","SET_FILTER_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","items","totalCount","followingInProgress","u","followed","users","following","toggleIsFetchingAC","toggleFollowingProgressAC","setFilterUsersAC","requestUsers","page","follow","unfollow"],"mappings":"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","file":"static/js/main.184c0b79.chunk.js","sourcesContent":["import {chatApi, ChatMessageAPIType, EventNameConstant, STATUS_CHAT} from \"../api/chat-api\";\nimport {AppThunkType} from \"./redux-store\";\nimport {Dispatch} from \"redux\";\nimport {v1} from \"uuid\";\n\nconst MESSAGES_RECEIVED = 'social/chat/MESSAGES_RECEIVED';\nconst STATUS_CHANGED = 'social/chat/STATUS_CHANGED';\n\n\nexport type ChatMessageType = ChatMessageAPIType & {id: string}\n\nconst initialState: InitialStateType = {\n   messages: [] as ChatMessageType[],\n   status: STATUS_CHAT.Ready\n}\n\nexport const chatReducer = (state = initialState, action: ChatActionType) => {\n   switch (action.type) {\n      case MESSAGES_RECEIVED:\n         return {\n            ...state,\n            messages: [...state.messages, ...action.payload.messages.map(m => ({...m, id: v1()}))]\n         }\n      case STATUS_CHANGED:\n         return {\n            ...state,\n            ...action.payload\n         }\n      default:\n         return state;\n   }\n}\n\nexport const actions = {\n   messageReceived: (messages: ChatMessageAPIType[]) => ({\n      type: MESSAGES_RECEIVED, payload: {messages}\n   } as const),\n   statusChanged: (status: STATUS_CHAT) => ({\n      type: STATUS_CHANGED, payload: {status}\n   } as const)\n}\n\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null;\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n   if (_newMessageHandler === null) {\n      _newMessageHandler = (messages) => {\n         dispatch(actions.messageReceived(messages))\n      }\n   }\n\n   return _newMessageHandler;\n}\n\nlet _statusChangedHandler: ((status: STATUS_CHAT) => void) | null = null;\nconst statusChangedCreator = (dispatch: Dispatch) => {\n   if (_statusChangedHandler === null) {\n      _statusChangedHandler = (status) => {\n         dispatch(actions.statusChanged(status))\n      }\n   }\n\n   return _statusChangedHandler;\n}\n\nexport const startMessagesListening = (): AppThunkType => async dispatch => {\n   chatApi.start();\n   chatApi.subscribe(EventNameConstant.Messages_Received, newMessageHandlerCreator(dispatch));\n   chatApi.subscribe(EventNameConstant.Status_Changed, statusChangedCreator(dispatch));\n}\nexport const stopMessagesListening = (): AppThunkType => async dispatch => {\n   chatApi.unsubscribe(EventNameConstant.Messages_Received, newMessageHandlerCreator(dispatch));\n   chatApi.unsubscribe(EventNameConstant.Status_Changed, statusChangedCreator(dispatch));\n   chatApi.stop();\n}\nexport const sendMessage = (message: string): AppThunkType => async dispatch => {\n   chatApi.sendMessage(message);\n}\n\ntype SetMessageActionType = ReturnType<typeof actions.messageReceived>\ntype SetStatusActionType = ReturnType<typeof actions.statusChanged>\n\ntype InitialStateType = {\n   messages: ChatMessageType[],\n   status: STATUS_CHAT\n}\n\n\nexport type ChatActionType = SetMessageActionType\n | SetStatusActionType","import {v1} from \"uuid\";\n\n\nconst ADD_NEW_MESSAGE = 'social/dialog/ADD-NEW-MESSAGE';\n\nconst initialState: DialogsPageType = {\n   dialogs: [\n      {id: v1(), name: 'Polina', avatar: 'https://source.unsplash.com/user/aiony/150x150/'},\n      {id: v1(), name: 'Ilya', avatar: 'https://source.unsplash.com/user/chrisjoelcampbell/150x150/'},\n      {id: v1(), name: 'Nasty', avatar: 'https://source.unsplash.com/user/cikstefan/150x150/'},\n      {id: v1(), name: 'Sasha', avatar: 'https://source.unsplash.com/user/romashilin/150x150/'},\n      {id: v1(), name: 'Masha', avatar: 'https://source.unsplash.com/user/houcinencibphotography/150x150/'}\n   ] as DialogsType[],\n};\n\nexport const dialogReducer = (state = initialState, action: DialogActionsType): DialogsPageType => {\n   switch (action.type) {\n\n      default:\n         return state;\n   }\n}\n\nexport const addMessageAC = (newMessage: string) => ({type: ADD_NEW_MESSAGE, newMessage} as const);\n\n/**\n * type\n */\nexport type DialogActionsType = AddMessageActionType;\nexport type AddMessageActionType = ReturnType<typeof addMessageAC>\nexport type DialogsType = {\n   id: string\n   name: string\n   avatar: string\n}\nexport type DialogsPageType = {\n   dialogs: Array<DialogsType>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2wXPP\",\"form_box\":\"Login_form_box__1owCV\",\"header_form\":\"Login_header_form__1crcD\",\"message\":\"Login_message__2sAhj\",\"social\":\"Login_social__1yhjp\",\"text_primary\":\"Login_text_primary__2DKmk\",\"input_group\":\"Login_input_group__eBfeV\",\"input_group____prepend\":\"Login_input_group____prepend__YqZFk\",\"input_group__text\":\"Login_input_group__text__jSB91\",\"form_control\":\"Login_form_control__3ThU4\",\"btn\":\"Login_btn__3S0Pc\",\"checkbox\":\"Login_checkbox__1wXhY\",\"error\":\"Login_error__6SziI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Navbar_aside__14C8v\"};","import axios from \"axios\";\nimport {AuthDataType} from \"../redux/auth-reducer\";\nimport {PhotosType, UsersType} from \"../redux/users-reducer\";\nimport {ContactsType, UserProfileType} from \"../redux/profile-reducer\";\n\n\nconst instance = axios.create({\n   withCredentials: true,\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n   headers: {\n      'API-KEY': '3928f52f-fe0d-4ea9-97d7-8b764f267e74'\n   },\n});\n\n\nexport const usersAPI = {\n   async getUsers(currentPage: number, pageSize: number, term: string = '', friend: null | boolean = null) {\n      const response = await instance.get<ResponseUserType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`));\n      return response.data;\n   },\n   async unfollowUsers(id: number) {\n      const response = await instance.delete<ResponseType>(`follow/${id}`);\n      return response.data;\n   },\n   async followUsers(id: number) {\n      const response = await instance.post<ResponseType>(`follow/${id}`);\n      return response.data;\n   },\n}\n\nexport const authAPI = {\n   async me() {\n      const response = await instance.get<ResponseType<AuthDataType>>(`auth/me`);\n      return response.data;\n   },\n   async login(email: string, password: string, rememberMe: boolean = false) {\n      const payload = {email, password, rememberMe};\n      const response = await instance.post<ResponseType<{ userId: number }>>('auth/login', payload);\n      return response.data;\n   },\n   async logout() {\n      const response =  await instance.delete<ResponseType>('auth/login');\n      return response.data\n   }\n}\n\nexport const profileAPI = {\n   async getProfile(id: number) {\n      const response = await instance.get<UserProfileType>(`profile/${id}`);\n         return response.data;\n   },\n   async getStatus(id: number) {\n      const response = await instance.get<string>(`profile/status/${id}`);\n      return response.data\n   },\n   async updateStatus(status: string) {\n      const response = await instance.put<ResponseType>(`profile/status`, {status});\n      return response.data\n   },\n   async savePhoto(photo: File) {\n      const formData = new FormData()\n      formData.append('image', photo)\n      const response = await instance.put<ResponseType<{photos: PhotosType}>>(`profile/photo`, formData, {\n         headers: {\n            'Content-Type': 'multipart/form-data'\n         }\n      });\n      return response.data\n   },\n   async saveProfile(formData: ProfileUpdateType) {\n      const response = await instance.put<ResponseType>(`profile`, formData)\n      return response.data\n   }\n}\n\nexport type ResponseType<D = {}> = {\n   fieldsErrors: string[]\n   resultCode: number\n   messages: string[]\n   data: D\n}\ntype ResponseUserType = {\n   error: string | null\n   items: UsersType[]\n   totalCount: number\n}\n\nexport type ProfileUpdateType = {\n   contacts: ContactsType\n   lookingForAJob: boolean\n   lookingForAJobDescription: string | null\n   fullName: string\n   userId: number\n   AboutMe: string\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"header__logo\":\"Header_header__logo___qdaS\",\"input\":\"Header_input__3sc1D\",\"buttons\":\"Header_buttons__2pq8T\",\"btn\":\"Header_btn__9aKgf\",\"btn_log\":\"Header_btn_log__2sged\",\"btn_reg\":\"Header_btn_reg__16EQ9\",\"auth\":\"Header_auth__1gWb7\",\"login__name\":\"Header_login__name__3eNGN\",\"photo\":\"Header_photo__1Kqrl\"};","export enum EventNameConstant {\n   Messages_Received = 'messages-received',\n   Status_Changed = 'status_changed '\n}\n\nexport enum STATUS_CHAT {\n   Pending = 'pending',\n   Ready = 'ready',\n   Error = 'error'\n}\n\nlet subscribers = {\n   [EventNameConstant.Messages_Received]: [] as MessagesReceivedSubscriberType[],\n   [EventNameConstant.Status_Changed]: [] as StatusChangedSubscriberType[]\n}\n\nlet ws: WebSocket | null = null;\n\nconst closeHandler = () => {\n   notifySubscribesAboutStatus(STATUS_CHAT.Pending)\n   setTimeout(createChanel, 5000);\n}\n\nconst cleanUp = () => {\n   ws?.removeEventListener('close', closeHandler);\n   ws?.removeEventListener('message', messageHandler);\n   ws?.removeEventListener('open', openHandler);\n   ws?.removeEventListener('error', errorHandler);\n}\n\nconst messageHandler = (e: MessageEvent) => {\n   const newMessages = JSON.parse(e.data);\n   subscribers[EventNameConstant.Messages_Received].forEach(s => s(newMessages));\n};\nconst openHandler = () => {\n   notifySubscribesAboutStatus(STATUS_CHAT.Ready);\n}\nconst errorHandler = () => {\n   notifySubscribesAboutStatus(STATUS_CHAT.Error);\n   console.error('REFRESH PAGE');\n}\n\nconst notifySubscribesAboutStatus = (status: STATUS_CHAT) => {\n   subscribers[EventNameConstant.Status_Changed].forEach(s => s(status));\n}\n\nfunction createChanel() {\n   cleanUp();\n   ws?.close();\n\n   ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\n   notifySubscribesAboutStatus(STATUS_CHAT.Pending)\n   ws.addEventListener('close', closeHandler);\n   ws.addEventListener('message', messageHandler);\n   ws.addEventListener('open', openHandler);\n   ws.addEventListener('error', errorHandler);\n}\n\nexport const chatApi = {\n   start() {\n      createChanel()\n   },\n   stop() {\n      subscribers[EventNameConstant.Messages_Received] = [];\n      cleanUp();\n      ws?.close();\n   },\n   subscribe(eventName: EventNameConstant, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\n      // @ts-ignore\n      subscribers[eventName].push(callback);\n      return () => {\n         // @ts-ignore\n         subscribers[eventName] = subscribers[eventName].filter(s => s !== callback);\n      }\n   },\n   unsubscribe(eventName: EventNameConstant, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\n      // @ts-ignore\n      subscribers[eventName] = subscribers[eventName].filter(s => s !== callback);\n   },\n   sendMessage(message: string) {\n      ws?.send(message);\n   }\n}\n\n\ntype MessagesReceivedSubscriberType = (message: ChatMessageAPIType[]) => void\ntype StatusChangedSubscriberType = (status: STATUS_CHAT) => void\nexport type ChatMessageAPIType = {\n   message: string\n   photo: string\n   userId: number\n   userName: string\n}","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {AppThunkType} from \"./redux-store\";\n\nconst SET_USER_DATA = 'social/auth/SET_USER_DATA';\n\n\nconst initialState: AuthType = {\n   id: null,\n   email: null,\n   login: null,\n   isAuth: false,\n};\n\nexport const authReducer = (state: AuthType = initialState, action: AuthActionsType): AuthType => {\n   switch (action.type) {\n      case SET_USER_DATA:\n         return {\n            ...state,\n            ...action.payload,\n         }\n      default:\n         return state;\n   }\n}\n\nexport const setAuthUserDataAC = (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\n   ({type: SET_USER_DATA, payload: {id, email, login, isAuth,}} as const);\n\n/**\n * thunk creator\n */\nexport const getAuthUserData = (): AppThunkType => async dispatch => {\n   try {\n      const data = await authAPI.me();\n      if (data.resultCode === 0) {\n         const {email, id, login} = data.data;\n         dispatch(setAuthUserDataAC(id, email, login, true));\n      }\n   } catch(err) {\n      console.warn(err);\n   }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => async dispatch => {\n   try {\n      const data = await authAPI.login(email, password, rememberMe);\n      if (data.resultCode === 0) {\n         dispatch(getAuthUserData());\n      } else {\n         const message = data.messages.length > 0 ? data.messages[0] : 'some error';\n         dispatch(stopSubmit('login', {_error: message}));\n      }\n   } catch(err) {\n      console.warn(err);\n   }\n}\n\nexport const logout = (): AppThunkType => async dispatch => {\n   try {\n      const data = await authAPI.logout();\n      if (data.resultCode === 0) {\n         dispatch(setAuthUserDataAC(null, null, null, false));\n      }\n   } catch(err) {\n      console.warn(err);\n   }\n}\n\n/**\n * Types\n */\nexport type AuthActionsType = SetUserDataActionType\n\nexport type AuthDataType = {\n   id: number\n   email: string\n   login: string\n}\n\n\nexport type AuthType = {\n   id: number | null\n   email: string | null\n   login: string | null\n   isAuth: boolean\n}\n\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserDataAC>;\n\n","import {AppThunkType} from \"./redux-store\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\n\nconst INITIALIZED_SUCCESS = 'social/app/INITIALIZED_SUCCESS';\n\nconst initialState: AppInitStateType = {\n   initialized: false\n};\n\nexport const appReducer = (state: AppInitStateType = initialState, action: AppActionType): AppInitStateType => {\n   switch (action.type) {\n      case INITIALIZED_SUCCESS:\n         return {\n            ...state,\n            initialized: true\n         }\n      default:\n         return state;\n   }\n}\n\n/**\n * action creator\n */\nconst setInitializedSuccessAC = () => ({type: INITIALIZED_SUCCESS})\n\n/**\n * thunk creator\n */\nexport const initializeApp = (): AppThunkType => async dispatch => {\n   await dispatch(getAuthUserData());\n   dispatch(setInitializedSuccessAC());\n}\n\n/**\n * Types\n */\ntype SetInitializedSuccessActionType = ReturnType<typeof setInitializedSuccessAC>\nexport type AppActionType = SetInitializedSuccessActionType\ntype AppInitStateType = {\n   initialized: boolean\n}\n\n\n\n\n\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {DialogActionsType, dialogReducer} from \"./dialog-reducer\";\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\nimport {UsersActionsType, usersReducer} from \"./users-reducer\";\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\nimport {FormAction, reducer as formReducer} from 'redux-form'\nimport {AppActionType, appReducer} from \"./app-reducer\";\nimport {ChatActionType, chatReducer} from \"./chat-reducer\";\n\nconst rootReducer = combineReducers({\n   dialogPage: dialogReducer,\n   profilePage: profileReducer,\n   usersPage: usersReducer,\n   auth: authReducer,\n   form: formReducer,\n   app: appReducer,\n   chat: chatReducer,\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n\ntype AppActionsType = AuthActionsType\n   | DialogActionsType\n   | ProfileActionsType\n   | UsersActionsType\n   | FormAction\n   | AppActionType\n   | ChatActionType\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, AppActionsType>\n// @ts-ignore\nwindow.store = store;\n","import React from 'react';\nimport style from \"./Navigation.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\n\nexport const Navigation = React.memo(() => {\n   return (\n      <>\n         <nav className={style.nav}>\n            <ul>\n               <li>\n                  <NavLink to=\"/profile\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-address-card\"/>\n                     Profile\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-envelope\"/>\n                     Message\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/users\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-user-plus\"/>\n                     Users\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/news\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-rss-square\"/>\n                     News\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/music\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-music\"/>\n                     Music\n                  </NavLink>\n               </li>\n               <li>\n                  <NavLink to=\"/settings\" activeClassName={style.activeLink}>\n                     <i className=\"fa fa-cog\"/>\n                     Settings\n                  </NavLink>\n               </li>\n            </ul>\n         </nav>\n      </>\n   );\n});\n","import React from 'react';\nimport style from './Navbar.module.scss';\nimport {Navigation} from \"./Navigation/Navigation\";\n\n\nexport const Navbar = React.memo(() => {\n   return (\n      <aside className={style.aside}>\n         <Navigation/>\n      </aside>\n   );\n});\n\n\n","import React from 'react';\nimport style from './Settings.module.scss';\n\nconst Settings = React.memo(() => {\n   return <div className={style.settings}>Settings</div>;\n});\n\nexport default Settings;\n","import React from 'react';\nimport style from './Music.module.scss';\n\nconst Music = React.memo(() => {\n   return <div className={style.music}>Music</div>;\n});\n\nexport default Music;\n","import React from 'react';\nimport style from './News.module.scss';\n\nconst News = React.memo(() => {\n   return <div className={style.news}>News</div>;\n});\n\nexport default News;\n","export default __webpack_public_path__ + \"static/media/logo.92dca5c6.png\";","import React from 'react';\nimport style from './Header.module.scss';\nimport logo from '../../assets/images/logo.png';\nimport user from '../../assets/images/user.png';\nimport {NavLink} from 'react-router-dom';\nimport {PhotosType} from \"../../redux/users-reducer\";\n\ntype HeaderPropsType = {\n   isAuth: boolean\n   login: string | null\n   logout: () => void\n   photoUser: PhotosType\n}\n\nconst Header: React.FC<HeaderPropsType> = React.memo(({isAuth, login, photoUser, logout}) => {\n   return (\n      <header className={style.header}>\n         <img className={style.header__logo} src={logo} alt=\"\"/>\n         <input\n            type=\"search\"\n            placeholder=\"Enter your search\"\n            name=\"form\"\n            className={style.input}\n         />\n\n         {\n            isAuth\n               ? <div className={style.auth}>\n                  <div className={style.login}>\n                     <div className={style.login__name}>Hello {login}</div>\n                     <button\n                        className={`${style.btn} ${style.btn_log}`}\n                        onClick={logout}\n                     >Logout</button>\n                  </div>\n                  <img className={style.photo} src={photoUser.small || photoUser.large || user} alt=\"user\"/>\n               </div>\n               : <div className={style.buttons}>\n                  <NavLink\n                     to={'/login'}\n                     className={`${style.btn} ${style.btn_log}`}>\n                     <i className=\"fa fa-lock\"/>\n                     Sign In\n                  </NavLink>\n                  <a\n                     href={'https://social-network.samuraijs.com/signUp'}\n                     className={`${style.btn} ${style.btn_reg}`}>\n                     <i className=\"fa fa-globe\"/>\n                     Register\n                  </a>\n               </div>\n         }\n      </header>\n   )\n})\n\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getMyPhoto} from \"../../redux/profile-reducer\";\n\n\nclass HeaderContainer extends React.Component<TProps> {\n\n   shouldComponentUpdate(nextProps: Readonly<TProps>, nextState: Readonly<{}>): boolean {\n      return nextProps !== this.props || nextState !== this.state;\n   }\n\n   componentDidMount() {\n      const userId = '17599';\n      this.props.getMyPhoto(+userId);\n   }\n\n\n   render() {\n      return (\n         <Header\n            {...this.props}\n            login={this.props.login}\n            isAuth={this.props.isAuth}\n            photoUser={this.props.photoUser}\n         />\n      )\n   }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n   isAuth: state.auth.isAuth,\n   login: state.auth.login,\n   photoUser: state.profilePage.photos\n})\n\nconst connector = connect(mapStateToProps, {\n   getMyPhoto,\n   logout,\n});\n\ntype TProps = ConnectedProps<typeof connector>;\nexport default connector(HeaderContainer);\n\n\n","import React from \"react\";\nimport s from \"./Login.module.scss\";\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\n\ntype FormDataType = {\n   email: string\n   password: string\n   rememberMe: boolean\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = React.memo((props) => {\n   return (\n      <form onSubmit={props.handleSubmit}>\n         {\n            props.error && <div className={s.error}>{props.error}</div>\n         }\n         <div className={s.input_group}>\n            <div className={s.input_group__prepend}>\n               <span className={s.input_group__text}><i className=\"fa fa-user\"/></span>\n            </div>\n            <Field\n               type=\"text\"\n               className={s.form_control}\n               placeholder=\"Email\"\n               component={Input}\n               name={'email'}\n               validate={[requiredField, maxLength30]}\n            />\n         </div>\n         <div className={s.input_group}>\n            <div className={s.input_group__prepend}>\n               <span className={s.input_group__text}><i className=\"fa fa-lock\"/></span>\n            </div>\n            <Field\n               type=\"password\"\n               className={s.form_control}\n               placeholder=\"Password\"\n               component={Input}\n               name={'password'}\n               validate={[requiredField, maxLength30]}\n            />\n         </div>\n\n         <div className={s.message}>\n            <Field\n               component={Input}\n               className={s.checkbox}\n               type=\"checkbox\"\n               name={'rememberMe'}\n            />\n            <div>Remember</div>\n         </div>\n         <button className={`${s.btn}`}>LOGIN</button>\n      </form>\n   )\n})\n\nconst LoginReduxForm = reduxForm<FormDataType>({\n   form: 'login'\n})(LoginForm)\n\ntype LoginPropsType = {\n   login: (email: string, password: string, rememberMe: boolean) => void\n   isAuth: boolean\n}\n\nconst Login: React.FC<LoginPropsType> = React.memo(({login, isAuth}) => {\n\n   const onSubmit = ({email, password, rememberMe}: FormDataType) => {\n      login(email, password, rememberMe);\n   }\n\n   if (isAuth) {\n      return <Redirect to={'/profile'}/>\n   }\n\n   return (\n      <div className={s.container}>\n         <div className={s.form_box}>\n            <div className={s.header_form}>\n               <h4 className={`${s.text_primary} ${s.text_center}`}>\n                  <i className=\"fa fa-user-circle\"/>\n               </h4>\n            </div>\n            <LoginReduxForm onSubmit={onSubmit} />\n            <div className={s.social}>\n               <a href=\"https://facebook.com/\"><i className=\"fa fa-facebook\"/></a>\n               <a href=\"https://twitter.com/\"><i className=\"fa fa-twitter-square\"/></a>\n               <a href=\"https://www.google.com/\"><i className=\"fa fa-google\"/></a>\n            </div>\n         </div>\n      </div>\n   )\n})\n\ntype MapDispatchToPropsType = {\n   login: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype MapStateToPropsType = {\n   isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n   return {\n      isAuth: state.auth.isAuth\n   }\n}\n\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n   mapStateToProps,\n   {login})(Login)\n","import React, {ComponentType, ReactNode, Suspense} from \"react\";\nimport {Preloader} from \"../components/common/preloader/Preloader\";\n\n\nexport function WithSuspense<T>(Component: ComponentType<T>) {\n\n   return (props: ReactNode) => {\n      return <Suspense fallback={<Preloader/>}>\n         <Component {...props as T}/>\n      </Suspense>\n   }\n}","import React, {Component} from 'react';\nimport './App.scss';\nimport {Navbar} from './components/Navbar/Navbar';\nimport Settings from './components/Settings/Settings';\nimport Music from './components/Music/Music';\nimport News from './components/News/News';\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {WithSuspense} from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import( './components/Profile/ProfileContainer'));\nconst Users= React.lazy(() => import('./components/Users/Users'));\n\n\nclass App extends Component<PropsType> {\n\n   componentDidMount() {\n      this.props.initializeApp();\n   }\n\n   render() {\n      if (!this.props.initialized) {\n         return <Preloader/>\n      }\n\n      return (\n         <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Navbar/>\n            <main className=\"app-wrapper-content\">\n               <Switch>\n                  <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)}/>\n                  <Route path=\"/profile/:userId?\" exact render={WithSuspense(ProfileContainer)}/>\n                  <Route path=\"/users\" render={WithSuspense(Users)}/>\n                  <Route path=\"/login\" render={() => <Login/>}/>\n                  <Route path=\"/news\" render={() => <News/>}/>\n                  <Route path=\"/music\" render={() => <Music/>}/>\n                  <Route path=\"/settings\" render={() => <Settings/>}/>\n                  <Redirect to='/profile'/>\n               </Switch>\n            </main>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n   return {\n      initialized: state.app.initialized\n   }\n}\n\nexport default compose<React.ComponentType>(\n   withRouter,\n   connect(mapStateToProps, {initializeApp})\n)(App);\n\n\ntype MapDispatchToPropsType = {\n   initializeApp: () => void\n}\ntype MapStateToPropsType = {\n   initialized: boolean\n}\n\ntype PropsType = & MapStateToPropsType & MapDispatchToPropsType\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport App from \"./App\";\n\n\nReactDOM.render(\n      <BrowserRouter>\n         <Provider store={store}>\n            <App />\n         </Provider>\n      </BrowserRouter>,\n      document.getElementById('root')\n   );\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2vPR3\",\"activeLink\":\"Navigation_activeLink__2cq6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"fieldForm\":\"FormsControls_fieldForm__1fEqg\",\"error\":\"FormsControls_error__1QSyu\",\"error__span\":\"FormsControls_error__span__TbyHu\"};","import {v1} from 'uuid';\nimport {PhotosType} from \"./users-reducer\";\nimport {profileAPI, ProfileUpdateType} from \"../api/api\";\nimport {AppThunkType} from \"./redux-store\";\n\nconst ADD_NEW_POST = 'social/profile/ADD-NEW-POST';\nconst SET_USER_PROFILE = 'social/profile/SET_USER_PROFILE';\nconst SET_STATUS = 'social/profile/SET_STATUS';\nconst SET_PHOTO = 'social/profile/SET_PHOTO';\nconst SAVE_PHOTOS_SUCCESS = 'social/profile/SAVE_PHOTOS_SUCCESS';\nconst SAVE_PROFILE = 'social/profile/SAVE_PROFILE';\n\nconst initialState: ProfilePageType = {\n   posts: [\n      {\n         id: v1(),\n         message: 'Lorem ipsum dolor, sit amet consecrated animistic elicit. Possimus ipsum sit voluptate sapiente ratione vero magnidoloremque modi quit.',\n         countLike: 10\n      },\n      {\n         id: v1(),\n         message: 'Lorem ipsum dolor, sit amet consecrated animistic elicit. Possimus ipsum sit voluptate sapiente ratione vero magnidoloremque modi qui.',\n         countLike: 32\n      }\n   ],\n   profile: null,\n   status: null,\n   photos: {\n      small: null,\n      large: null\n   }\n}\n\nexport const profileReducer = (state = initialState, action: ProfileActionsType): ProfilePageType => {\n   switch (action.type) {\n      case ADD_NEW_POST:\n         const post: PostType = {\n            id: v1(),\n            message: action.newPost,\n            countLike: 3\n         };\n         return {\n            ...state,\n            posts: [post, ...state.posts]\n         }\n      case SET_USER_PROFILE:\n         return {\n            ...state,\n            profile: action.profile\n         }\n      case SET_STATUS:\n         return {\n            ...state,\n            status: action.status\n         }\n      case SET_PHOTO:\n         return {\n            ...state,\n            photos: action.photo\n         }\n      case SAVE_PHOTOS_SUCCESS:\n         return {\n            ...state,\n            profile: state.profile && {...state.profile, photos: action.photos}\n         }\n      default:\n         return state;\n   }\n}\n\nexport const addPostAC = (newPost: string) => ({type: ADD_NEW_POST, newPost} as const);\nexport const setUserProfileAC = (profile: UserProfileType) => ({type: SET_USER_PROFILE, profile} as const)\nexport const setStatusAC = (status: string) => ({type: SET_STATUS, status} as const)\nexport const setMyPhotoAC = (photo: PhotosType) => ({type: SET_PHOTO, photo} as const)\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: SAVE_PHOTOS_SUCCESS, photos} as const)\nexport const saveProfileAC = (profile: UserProfileType) => ({type: SAVE_PROFILE, profile})\n\n\n/**\n * thunk creator\n */\nexport const getUserProfile = (userId: number): AppThunkType => async dispatch => {\n   try {\n      const data = await profileAPI.getProfile(userId);\n      dispatch(setUserProfileAC(data));\n   } catch (err) {\n      console.warn(err);\n   }\n}\n\nexport const getMyPhoto = (userId: number): AppThunkType => async dispatch => {\n   try {\n      const data = await profileAPI.getProfile(userId);\n      dispatch(setMyPhotoAC(data.photos));\n   } catch (err) {\n      console.warn(err);\n   }\n}\n\nexport const getStatus = (userId: number): AppThunkType => async dispatch => {\n   try {\n      const data = await profileAPI.getStatus(userId);\n      dispatch(setStatusAC(data));\n   } catch (err) {\n      console.warn(err);\n   }\n}\n\nexport const updateStatus = (status: string): AppThunkType => async dispatch => {\n   try {\n      const data = await profileAPI.updateStatus(status);\n      if (data.resultCode === 0) {\n         dispatch(setStatusAC(status));\n      }\n   } catch (err) {\n      console.warn(err);\n   }\n}\n\nexport const savePhoto = (photo: File): AppThunkType => async dispatch => {\n   try {\n      const data = await profileAPI.savePhoto(photo)\n      if (data.resultCode === 0) {\n         dispatch(savePhotoSuccess(data.data.photos))\n      }\n   } catch (err) {\n      console.warn(err);\n   }\n}\n\nexport const saveProfile = (formData: ProfileUpdateType): AppThunkType => async dispatch => {\n   try {\n      await profileAPI.saveProfile(formData);\n      const dataUser = await profileAPI.getProfile(formData.userId);\n      dispatch(setUserProfileAC(dataUser));\n   } catch(err) {\n      console.warn(err);\n   }\n}\n\n/**\n * type\n */\nexport type ProfileActionsType = AddNewPostActionType\n   | SetUserProfileType\n   | SetStatusType\n   | SetMyPhotoType\n   | SavePhotosType\n\nexport type AddNewPostActionType = ReturnType<typeof addPostAC>\nexport type SetUserProfileType = ReturnType<typeof setUserProfileAC>\nexport type SetStatusType = ReturnType<typeof setStatusAC>\nexport type SetMyPhotoType = ReturnType<typeof setMyPhotoAC>\nexport type SavePhotosType = ReturnType<typeof savePhotoSuccess>\n\n\nexport type PostType = {\n   id?: string\n   message: string\n   countLike: number\n}\nexport type ContactsType = {\n   facebook: string | null\n   vk: string | null\n   twitter: string | null\n   instagram: string | null\n   youtube: string | null\n   github: string | null\n   mainLink: string | null\n}\nexport type UserProfileType = {\n   aboutMe: string\n   contacts: ContactsType\n   lookingForAJob: boolean\n   lookingForAJobDescription: string | null\n   fullName: string\n   userId: number\n   photos: PhotosType\n}\nexport type ProfilePageType = {\n   posts: Array<PostType>\n   profile: UserProfileType | null\n   status: string | null\n   photos: PhotosType\n}","export default __webpack_public_path__ + \"static/media/loading.ec5c097b.svg\";","import React from \"react\";\nimport s from \"./Preloader.module.scss\";\nimport preloader from \"../../../assets/images/loading.svg\";\n\n\n\nexport const Preloader = React.memo(() => {\n\n   return (\n      <>\n         <div className={s.isFetching}>\n            <img src={preloader} alt={'loading spinner'}/>\n            <div className={s.overlay}/>\n         </div>\n      </>\n   )\n})\n","import React from \"react\";\nimport {WrappedFieldProps} from \"redux-form\";\nimport style from './FormsControls.module.scss'\n\nconst FormControl: React.FC<WrappedFieldProps> = ({input, meta: {touched, error}, ...restProps}) => {\n\n   const errorStyle = touched && error ? `${style.fieldForm} ${style.error}` : ''\n\n   return (\n      <>\n         <div className={`${style.formControl} ${errorStyle}`}>\n            {restProps.children}\n            {touched && error && <span className={`${style.error} ${style.error__span}`}>{error}</span>}\n         </div>\n      </>\n   )\n}\n\n\nexport const Textarea: React.FC<WrappedFieldProps> = React.memo((props) => {\n   const {input, meta, children, ...restProps} = props\n   return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n})\n\nexport const Input: React.FC<WrappedFieldProps> = React.memo((props) => {\n   const {input, meta, children, ...restProps} = props\n   return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n})\n\n","export const requiredField = (value: string) => {\n   if (value) return undefined;\n\n   return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n   if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n\n   return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isFetching\":\"Preloader_isFetching__3_w-3\",\"overlay\":\"Preloader_overlay__20605\"};","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","import {usersAPI} from \"../api/api\";\nimport {AppThunkType} from \"./redux-store\";\n\nconst FOLLOW = 'social/user/FOLLOW';\nconst UNFOLLOW = 'social/user/UNFOLLOW';\nconst SET_USERS = 'social/user/SET-USERS';\nconst SET_FILTER_USERS = 'social/user/SET_FILTER_USERS';\nconst SET_CURRENT_PAGE = 'social/user/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'social/user/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'social/user/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'social/user/TOGGLE_IS_FOLLOWING_PROGRESS';\n\nconst initialState: UsersPageType = {\n   items: [],\n   totalCount: 0,\n   pageSize: 5,\n   currentPage: 1,\n   isFetching: false,\n   followingInProgress: [],\n   filter: {\n      term: '',\n      friend: null\n   }\n};\n\nexport const usersReducer = (state = initialState, action: UsersActionsType): UsersPageType => {\n   switch (action.type) {\n      case FOLLOW:\n         return {\n            ...state,\n            items: state.items.map(u => u.id === action.userId ? {...u, followed: true} : u)\n         }\n      case UNFOLLOW:\n         return {\n            ...state,\n            items: state.items.map(u => u.id === action.userId ? {...u, followed: false} : u)\n         }\n      case SET_USERS:\n         return {\n            ...state,\n            items: [...action.users]\n         }\n      case SET_CURRENT_PAGE:\n         return {\n            ...state,\n            currentPage: action.currentPage\n         }\n      case SET_TOTAL_USERS_COUNT:\n         return {\n            ...state,\n            totalCount: action.totalCount\n         }\n      case TOGGLE_IS_FETCHING:\n         return {\n            ...state,\n            isFetching: action.isFetching\n         }\n      case TOGGLE_IS_FOLLOWING_PROGRESS:\n         return {\n            ...state,\n            followingInProgress: action.following\n               ? [...state.followingInProgress, action.userId]\n               : state.followingInProgress.filter(id => id !== action.userId)\n         }\n      case SET_FILTER_USERS:\n         return {\n            ...state,\n            filter: action.payload\n         }\n      default:\n         return state;\n   }\n}\n\nexport const followAC = (userId: number) => ({type: FOLLOW, userId} as const);\nexport const unFollowAC = (userId: number) => ({type: UNFOLLOW, userId} as const);\nexport const setUsersAC = (users: UsersType[]) => ({type: SET_USERS, users} as const);\nexport const setCurrentPageAC = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\nexport const setTotalUsersCountAC = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount} as const);\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\nexport const toggleFollowingProgressAC = (following: boolean, userId: number) => ({\n   type: TOGGLE_IS_FOLLOWING_PROGRESS,\n   following,\n   userId,\n} as const);\nexport const setFilterUsersAC = (filter: FilterType) => ({type: SET_FILTER_USERS, payload: filter} as const);\n/**\n * ThunkCreator\n */\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): AppThunkType => async dispatch => {\n   try {\n      dispatch(toggleIsFetchingAC(true));\n      dispatch(setCurrentPageAC(page));\n      dispatch(setFilterUsersAC(filter))\n      const data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend);\n      dispatch(setUsersAC(data.items));\n      dispatch(setTotalUsersCountAC(data.totalCount));\n   } catch (err) {\n      console.warn(err);\n   } finally {\n      dispatch(toggleIsFetchingAC(false));\n   }\n}\nexport const follow = (id: number): AppThunkType => async dispatch => {\n   try {\n      dispatch(toggleFollowingProgressAC(true, id));\n      const data = await usersAPI.followUsers(id);\n      if (data.resultCode === 0) {\n         dispatch(followAC(id));\n      }\n   } catch (err) {\n      console.warn(err);\n   } finally {\n      dispatch(toggleFollowingProgressAC(false, id));\n   }\n}\nexport const unfollow = (id: number): AppThunkType => async dispatch => {\n   try {\n      dispatch(toggleFollowingProgressAC(true, id));\n      const data = await usersAPI.unfollowUsers(id);\n      if (data.resultCode === 0) {\n         dispatch(unFollowAC(id));\n      }\n   } catch (err) {\n      console.warn(err);\n   } finally {\n      dispatch(toggleFollowingProgressAC(false, id));\n   }\n}\n/**\n * type\n */\nexport type UsersActionsType = FollowActionType\n   | UnfollowActionType\n   | SetUsersActionType\n   | SetCurrentPageActionTypeType\n   | SetTotalUsersCountActionType\n   | ToggleIsFetchingType\n   | ToggleFollowingProgressType\n   | SetFilterUsersType\n\nexport type PhotosType = {\n   small: string | null\n   large: string | null\n}\nexport type UsersType = {\n   name: string\n   id: number\n   uniqueUrlName: string | null\n   photos: PhotosType\n   status: string | null\n   followed: boolean\n}\nexport type UsersPageType = {\n   items: UsersType[]\n   totalCount: number\n   pageSize: number\n   currentPage: number\n   isFetching: boolean\n   followingInProgress: number[]\n   filter: FilterType\n}\n\nexport type FilterType = {\n   term: string\n   friend: null | boolean\n}\nexport type FollowActionType = ReturnType<typeof followAC>;\nexport type UnfollowActionType = ReturnType<typeof unFollowAC>;\nexport type SetUsersActionType = ReturnType<typeof setUsersAC>;\nexport type SetCurrentPageActionTypeType = ReturnType<typeof setCurrentPageAC>;\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCountAC>;\nexport type ToggleIsFetchingType = ReturnType<typeof toggleIsFetchingAC>;\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgressAC>;\nexport type SetFilterUsersType = ReturnType<typeof setFilterUsersAC>\n\n\n"],"sourceRoot":""}